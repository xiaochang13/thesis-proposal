%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 192.000000 190.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.9.5 (Build 13F1077) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 192 190
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval 
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   
		    
	[ 
	    0 1 nRange 1 sub
	    { 
		    2 mul/nDim2 xd		
		    Range nDim2 get		
		    Range nDim2 1 add get	
		    1 index sub			
						
		    255 div			
		    exch			
	    }for
	]store
    end
}bd
/FunEval 
{
    begin
	
	nRange mul /val xd	
				
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd 
	    val	
	    add DataSource exch get 
	    mulRange nDim2 get mul 	
	    mulRange nDim2 1 add get 
	    add 
	}for	
    end
}bd
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEval	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEval		
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			0/Function load FunEval sc	
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			Nsteps/Function load FunEval sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 192 190
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /w put
dup 34 /a put
dup 35 /n put
dup 36 /t put
dup 37 /hyphen put
dup 38 /zero put
dup 39 /one put
dup 40 /b put
dup 41 /e put
dup 42 /l put
dup 43 /i put
dup 44 /v put
dup 45 /A put
dup 46 /R put
dup 47 /G put
dup 48 /g put
dup 49 /r put
dup 50 /o put
dup 51 /y put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1446 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<






00>] def
/CharStrings 21 dict dup begin
/.notdef 0 def
/hyphen 1 def
/zero 2 def
/one 3 def
/A 4 def
/G 5 def
/R 6 def
/a 7 def
/b 8 def
/e 9 def
/g 10 def
/i 11 def
/l 12 def
/n 13 def
/o 14 def
/r 15 def
/t 16 def
/v 17 def
/w 18 def
/y 19 def
/period.alt 20 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-951 -481 1446 1077}def
/UniqueID 4234398 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C92633B2598E0B1EDFA3C2732C9D3498122A5E23C1999619F9F2A05B051C0B681D7A669278A382A773898B9BA5E74E76D79507B26C6A220110B20D37F5163FA090532B073A3E57F242B478333FC9771663AE0A1A31F9FE707C093D451EB8ED4FE44942019410BC2A0452E84AAA332266F41056E64BD6376DD89ED8058A44704C87E0405CFD1C4ABCC5827EAC1B1397B1513D0C1DD1BD4837E8235C17B5FAFEDCAAFBB2ECC639168FA3C52325F7A7CA354E22B867A105C1C748DB758356400DF40C21BBDF0B5909AADC707690EB92BCB48BA787CD579BA13ACFF7083809935379C95D5D3D039958092A3C1C136A1FADD805D9844DAC5D11B77A02F1553C825649CC5F9827A324A188CA81DFB8EC983AD5B9433D5B2584AA96FEDFC92E12B8F4E68CC8364EB64E07CECCCDA4D5DA11A220E2A1075C13206DFA1E1B7C99E8E726FA4BFC5AE6286E9A927E3A374058001630C101B1E66A961F5DAD22716DCC5F609EA43613F46FEAD027BBAA56502A5A924B5B9FD5583DABA08E59C296A606ABD81BEBA7D7812CCA42C75AF02E04050DBF8480FC6DF9F7BF584F36FAB7F44DFA2D85123CEA475BD6BAADD36DB441632BD8AAD77E19615402954E83A40BF6E27292EA0D71167302650162F027FF1E7C168A99627C52F839C8CE0C2FAE53071368A7537D42ABF9E7001CDF69E69F4B2AE7E738B29D581EC86103E42680F7BD2D0DC2304105E1CC9CAD9281016E63A5242474BDE032A297D73487D0164ACA2C15BD0D1ABE2
0AF1F9D97D26AF26F38D7328E7FC738825CBD1C9DFC1266EE961AAD0B2450DD08516673BF14A498AD1467B08AAAFA834B7D133B6649D0BB0F7AC9421A4024A03F69D25BA04D2E8387036F3DCE991CC3C59862F71FC7A1C30763665EBDDE38FE95A376E50CB602A2BAD42FD12865B9184B25F5EDAED6AFB5A826D1B6F482B656F72E1BFDBC64B1D61926DD59A8B53681981E007FA6F7C415F3FF3C6C387C60859B29EE53C3AC846FD9A279A9F2C8D5D37CBAEE03DE43DFC91E4C31AE81A44DF5C2F3BF238395098C1FECE2F033D4C8B424445F9C4E810109B02F6A64FFF85A37086827486A6F3B1AF43C6C15CD0130B585E170FAF4CAA3D545C3BECF370F2318F172E06076D72AD2A6209CB82DF5182726FF5C757142BE1D8EBA8EBC7D05907BFB226DA8E628C0A1ECCEBCD6CDE7A9E3F04C6B67E1E652D2E67C338DCAE400FE00B979666BB897CE5B6C49C30A74FBEC8AE49E8D63C065888EB21B627287C3EA709702CCDB740C55EAE208832CB93941C5B2ADEC3FBD8155E05E7B1BD13142DA0D917C6D080BC627DBE8C52761FB79FAC6AF513CB5D956BBB4FA58EF91370D6B8B96C50603844B2C66D71DE561A95122DACCCBF2CB62EA01C31D9B05DB69AB81CC3C8B7FBE81F3BF8A31C1568059476FB3F3A1F2850DC19864451F96396671C83453B94D79222103EF5E2B8BF211569BD322BB0242317F1007A52B4543193BB2C773DE36711761E575441999B709039396886E75827EC0ECB783EA00C1A50C2CE511B0D477BF845185C896CA8228F415C8EEDBACA3B4AF38C12F75BDEE2A5AEFA6F85721F5B1F34B8E90E9F8A399A22820198B21CEDEC974EE264EE72874EEF7BE565FC308E1A50CA877A3F68420FC7B650B09510A8034641A60B63B7BF1BC24B0C7CCFBA615CC34712693B83E6512744E27D3784AD3081E2CF6C96A30F17BB1C7DD15140EF91485590BD26DABD576BE9E52637013811FD02118F9053277B836947F8EA415014EA678D753848642EB80F973002F6531EA6BA7963B7D742EF231EED5A8A6EA77785D29A4F28B08C1234F2A7EB47AC17D0B0B050956F73C83ECC4CBBD1BD063F3026E2544D772090FB76734CF85AAD57198A76C74A58EB88D4017F08CD8BFA065E4AC0A4927CED16881AF34648262421D56659F7FCCC02CBA9189F5D6BD7D2CF13E361DF798F44ACBB93E3AE8970FCC074EDE6F57DFF2C4C58750481575DDF4822A09B1C122A9E23B7CBA63C6E8569420BF51E775F00444916C0CBFC2B77CA7ECCC6E8184A3A90FC68160C27B256BF1EB8512F242B3AC063DE003C4305AB80412505B694D03908336385C1D32784065FDB53132B91D539198E2202720D5A7C2BB83B904817BA60114F5B3798F440A984C3C794E58BC24603A2342B2756CF2B06D9B0A337C77A171693435D21F442FF6B949BCB4F2840DB42CE56DE

8A535EA105EC16DE774988863FE4B0E8CE0583EA599EE0184281A648629E6D64FDF3D6335A0058CD40398655C5514E09F084C2EB399E2C8F059D1D6C12D1E2A4E00120DE830485879C92DD3D12BC07557869037C2641DF6912D4E2C2555E55E657936200B69FE284D2155E9AAF45519E7242F4EB3286D16E93D9A60E8EBBBD856A6B77C3EF7E89437958395A90D5E1103BA503BE4BE023BD0AC14DCDA114941FE37BE14834E5BCCBC1B7882011069352988717C47114846F2F1F02B5A1A3655BBAF1383D52B800700035F42F266CBC616C0113EC714061E5B7E88CE80CF27B171CBE52C05330171BC27819EFF4F6D9D87B20AC13E4F1D0CC6C12AA04BA3AECF15CC97C4214589E9BFA0B92799735D378FE47D7CC6AFA120E8BC9409B99D8C460B63A97C19B467A426198BAD5FCF93F5863624943A8F26F1961ABB4529A4DA491061CFF7BDBFBEE415CF6D8BB03BD3737B80B02C59DA976A9B3030D83BAD2D731BFAE27B0CB8B12A88C5D9AE120ED04B0966A97D050D499AE113C87F00D17C742F93FDD3CE7BD37532407C3B8073B3C903DC4FA806057E152D38D90109CD1BA0C5F88BA67725693EA73C8DE3C7620E8CCA290E1B7B90EC94E378E1666258AA4F0521DA68873A85280D405C72AE9C6A0C27753132241CFCE203637E77CBF963E8CBD8F60F70812BD811725A4303B4E0BF92C4B171FD8FF938A2ADCF073B779BD95743851180D72F6B4284D2338805FB76409490C9F2CC090BFD54BF01D5CD697DB13398F932C694C1A1C5A7E24B9AE13CA322875FE214A8347B9702A8E1C63FA1CC80F9423BC53F8CED0DDC369AE4BE951E9CE4C95F57FB3A75CBE836EF02E18EB002DCAFF31933794EEBE3D63E5F72E3054CE06A47878129FF88C3DEB0FCDA4646880B9E18676D7C8C60F7C7768CEEB92A847BD494DFC8ED85D4D2F80E7609FA975EE65B16A9B5AD2AD3852DC1936815D6E284085E75FC21A5759743970E0F9ED51DA09989F0643054EFCF19F1C3979C5E9FB9E1F68E8CE98FFE1BA1831875B800B03293705B455FA257E78CE9B279B3798667F1A8FC63734355F24911EC0F53929660C0354B43DAA10C23FFB38D2ED97B612EDDD32A6D1CE791557CC054EA43B6914AACE9C6348B1A910FE576C5BE3A1EC161FCF310CF2ED87C6
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
1 1 1 sc
q
0 0 192 190 rc
-410 322 m
550 322 l
550 -850 l
-410 -850 l
h
-410 322 m
f
1 J
1 j
0 0 0 sc
1 0 0 -1 -410 322 cm
479.85449 140.8028 m
450.35159 167.05482 l
480.05042 140.75752 m
450.68643 166.75609 l
S
CM
34.902748 149.28152 m
42.832508 152.46254 l
38.785595 156.89227 l
h
34.902748 149.28152 m
f
0 J
0 j
1 0 0 -1 -410 322 cm
444.90274 172.71848 m
452.83252 169.53746 l
448.78558 165.10773 l
h
444.90274 172.71848 m
S
481.28064 142.35765 m
479.62549 142.2829 478.3443 140.88052 478.41904 139.22536 c
478.4938 137.57019 479.89618 136.289 481.55133 136.36375 c
483.20651 136.43851 484.48767 137.84088 484.41293 139.49605 c
484.3382 141.15121 482.93582 142.43239 481.28064 142.35765 c
S
1 J
1 j
480.08502 140.30896 m
480.0163 140.63945 471.90665 172.0226 476.67999 210.37511 c
480.31171 234.13306 491.62756 257.29059 498.72318 269.62567 c
480.08502 140.30896 m
480.2663 140.38945 472.15665 171.7726 476.92999 210.12511 c
480.56171 233.88306 491.87756 257.04059 498.97318 269.37567 c
S
CM
92.987091 45.607487 m
91.260353 53.975185 l
86.184074 50.776527 l
h
92.987091 45.607487 m
f
0 J
0 j
1 0 0 -1 -410 322 cm
502.98709 276.39252 m
501.26035 268.02481 l
496.18408 271.22348 l
h
502.98709 276.39252 m
S
1 J
1 j
479.05136 140.97395 m
564.15228 162.92203 l
479.20087 140.75397 m
564.04669 162.6718 l
S
CM
161.16109 157.08978 m
154.17284 162.00552 l
152.6637 156.19841 l
h
161.16109 157.08978 m
f
0 J
0 j
1 0 0 -1 -410 322 cm
571.16107 164.91022 m
564.17285 159.99448 l
562.6637 165.80159 l
h
571.16107 164.91022 m
S
1 J
1 j
573.13519 167.09222 m
564.55591 168.24965 545.00055 172.28018 533 181 c
525.03125 186.80371 518.34515 192.37218 515.85565 196.8799 c
573.13519 167.09222 m
564.80591 167.99965 545.25055 172.03018 533.25 180.75 c
525.28125 186.55371 518.59515 192.12218 516.10565 196.6299 c
S
CM
102.73985 117.75003 m
108.61823 123.95041 l
103.09181 126.28678 l
h
102.73985 117.75003 m
f
0 J
0 j
1 0 0 -1 -410 322 cm
512.73987 204.24997 m
518.61823 198.04959 l
513.0918 195.71321 l
h
512.73987 204.24997 m
S
574.35577 169.03603 m
573.00397 168.07806 572.68463 166.2056 573.64264 164.85376 c
574.60059 163.50192 576.47308 163.18263 577.82489 164.14061 c
579.17676 165.09859 579.49603 166.97104 578.53802 168.32288 c
577.58008 169.67471 575.70758 169.994 574.35577 169.03603 c
S
1 J
1 j
576.52087 169.45541 m
575.93915 170 559.45209 185.46954 551.34515 199 c
549.15936 204.6105 548.50696 208.3351 548.31958 211.63058 c
576.52087 169.45541 m
576.18915 169.75 559.70209 185.21954 551.59515 198.75 c
549.40936 204.3605 548.75696 208.0851 548.56958 211.38058 c
S
CM
140.89262 102.79893 m
141.15868 111.3388 l
135.47781 109.40801 l
h
140.89262 102.79893 m
f
0 J
0 j
1 0 0 -1 -410 322 cm
550.89264 219.20107 m
551.15869 210.66121 l
545.47784 212.592 l
h
550.89264 219.20107 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 29 172 cm
/F1.1[ 13 0 0 -13 0 0]sf
-23.835501 4.5 m
(!"#$%&')[ 9.854000 6.981000 7.228000 4.095000 5.057000 7.228000 0.000000 ] xS
1 0 0 -1 104.5 151 cm
-30.2185 4.5 m
(\(\)*+\),\)%&')[ 7.709000 6.981000 2.886000 2.886000 6.981000 6.500000 6.981000 5.057000 7.228000 0.000000 ] xS
1 0 0 -1 127.81525 177 cm
-17.212 4.5 m
(-./')[ 8.424000 8.905000 9.867000 0.000000 ] xS
1 0 0 -1 161.18475 125 cm
-17.212 4.5 m
(-./&)[ 8.424000 8.905000 9.867000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -410 322 cm
546.16077 223.91589 m
510.3241 243.30103 l
546.31604 223.84685 m
511.28439 242.7579 l
S
CM
93.66803 74.90976 m
102.12779 76.106606 l
99.25486 81.374077 l
h
93.66803 74.90976 m
f
0 J
0 j
1 0 0 -1 -410 322 cm
503.66803 247.09024 m
512.12781 245.8934 l
509.25485 240.62593 l
h
503.66803 247.09024 m
S
547.58478 225.55394 m
545.99524 225.08638 545.08569 223.41879 545.55328 221.82928 c
546.02087 220.23978 547.68842 219.33025 549.27795 219.79781 c
550.86743 220.26537 551.77698 221.93297 551.30939 223.52248 c
550.84186 225.11198 549.17426 226.0215 547.58478 225.55394 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 108 98 cm
-8.7814999 4.5 m
(0+1*)[ 7.462000 2.886000 4.329000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -410 322 cm
575.51135 169.35774 m
575.93915 170 604.42731 198.83012 584 228 c
568.28564 253.2435 531.52747 267.93396 513.30396 274.61826 c
575.51135 169.35774 m
576.18915 169.75 604.67731 198.58012 584.25 227.75 c
568.53564 252.9935 531.77747 267.68396 513.55396 274.36826 c
S
CM
95.785698 44.649055 m
104.32926 44.562386 l
102.27962 50.201443 l
h
95.785698 44.649055 m
f
0 J
0 j
1 0 0 -1 -410 322 cm
505.78571 277.35095 m
514.32928 277.43762 l
512.2796 271.79855 l
h
505.78571 277.35095 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 74 27 cm
-10.8355 4.5 m
(\(23)[ 7.709000 7.462000 0.000000 ] xS
1 0 0 -1 47.81525 113 cm
-17.212 4.5 m
(-./&)[ 8.424000 8.905000 9.867000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -410 322 cm
503.99442 284.15646 m
504.43442 311.19653 l
504.14853 284.03101 m
504.66599 310.20691 l
S
CM
94 3.9000001 m
97 11.9 l
91 11.9 l
h
94 3.9000001 m
f
0 J
0 j
1 0 0 -1 -410 322 cm
504 318.10001 m
507 310.10001 l
501 310.10001 l
h
504 318.10001 m
S
506.12131 283.62131 m
504.94974 284.79288 503.05026 284.79288 501.87869 283.62131 c
500.70712 282.44974 500.70712 280.55026 501.87869 279.37869 c
503.05026 278.20709 504.94974 278.20709 506.12131 279.37869 c
507.29288 280.55026 507.29288 282.44974 506.12131 283.62131 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 165.18475 64 cm
-17.212 4.5 m
(-./')[ 8.424000 8.905000 9.867000 0.000000 ] xS
ep
end
%%Trailer
%%EOF
